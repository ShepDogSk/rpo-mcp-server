stages:
  - test
  - build
  - deploy

variables:
  NODE_VERSION: "18"

# Cache node_modules
cache:
  paths:
    - node_modules/

# Install dependencies
before_script:
  - npm ci

# Test stage
test:
  stage: test
  image: node:${NODE_VERSION}
  script:
    - npm run lint
    - npm run test
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
    paths:
      - coverage/
    expire_in: 1 week

# Build stage
build:
  stage: build
  image: node:${NODE_VERSION}
  script:
    - npm run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - main
    - develop
    - tags

# Security scanning
security_scan:
  stage: test
  image: node:${NODE_VERSION}
  script:
    - npm audit --audit-level moderate
  allow_failure: true

# Dependency scanning
dependency_scanning:
  stage: test
  image: node:${NODE_VERSION}
  script:
    - npm outdated || true
  allow_failure: true

# Release job (only on tags)
release:
  stage: deploy
  image: node:${NODE_VERSION}
  script:
    - echo "Creating release for tag $CI_COMMIT_TAG"
    - npm pack
  artifacts:
    paths:
      - "*.tgz"
    expire_in: 1 month
  only:
    - tags

# Documentation deployment
pages:
  stage: deploy
  script:
    - mkdir public
    - cp README.md public/index.md
    - cp -r examples public/
    - cp LICENSE public/
  artifacts:
    paths:
      - public
  only:
    - main
